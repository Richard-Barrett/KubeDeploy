1: Deploy a pod named nginx-pod using the nginx:alpine image.
A: Use the command kubectl run --generator=run-pod/v1 nginx-pod --image=nginx:alpine

2: Deploy a messaging pod using the redis:alpine image with the labels set to tier=msg.
A: Use the command kubectl run --generator=run-pod/v1 messaging --image=redis:alpine -l tier=msg

3: Create a namespace named apx-x9984574
A: Use the command kubectl create namespace apx-x9984574

4: Get the list of nodes in JSON format and store it in a file at /opt/outputs/nodes-z3444kd9.json
A: Command kubectl get nodes -o json > /opt/outputs/nodes-z3444kd9.json

5: Create a service messaging-service to expose the messaging application within the cluster on port 6379.
A: Run the command kubectl expose pod messaging --port=6379 --name messaging-service

6: Create a deployment named hr-web-app using the image kodekloud/webapp-color with 2 replicas
A: Use the command kubectl create deployment hr-web-app --image=kodekloud/webapp-color --replicas=2, or edit the deployment after initialization. 

7: Create a static pod named static-busybox on the master node that uses the busybox image and the command sleep 1000
A: kubectl run --restart=Never --image=busybox static-busybox --dry-run -o yaml --command -- sleep 1000 > /etc/kubernetes/manifests/static-busybox.yaml

8: Create a POD in the finance namespace named temp-bus with the image redis:alpine.
A: Use the command kubectl run temp-bus --image=redis:alpine --namespace=finance --restart=Never

9: A new application orange is deployed. There is something wrong with it. Identify and fix the issue.
A: Check the command used by the initContainer

10: Expose the hr-web-app as service hr-web-app-service application on port 30082 on the nodes on the cluster
A: Run the command kubectl expose deployment hr-web-app --type=NodePort --port=8080 --name=hr-web-app-service --dry-run -o yaml > hr-web-app-service.yaml to generate a service definition file. Then edit the nodeport in it and create a service.

11: Use JSON PATH query to retrieve the osImages of all the nodes and store it in a file /opt/outputs/nodes_os_x43kj56.txt
A: Run the command kubectl get nodes -o jsonpath='{.items[*].status.nodeInfo.osImage}' > /opt/outputs/nodes_os_x43kj56.txt

12: Create a Persistent Volume with the given specification.
A: 
